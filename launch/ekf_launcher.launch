<launch>

  <!--let's see if we should be running the winch or not-->
  <arg name="winch" default="false" />
  <param name="winch_bool" type="bool" value="$(arg winch)" />

  <!--define robot_radius parameter-->
  <param name="robot_radius" type="double" value="0.0915" />  

  <!--start kinect... note if it is already running, the other
      instance will be automatically killed-->
  <include file="$(find openni_camera)/launch/openni_node.launch"/>

  <!-- launch rviz if "vis"=true: -->
  <arg name="vis" default="true" />
  <group if="$(arg vis)">
    <node pkg="rviz" type="rviz" respawn="false" name="rviz"
	  args="-d $(find puppeteer_control)/launch/default_control.vcg" />
  </group>
 
  <!--first launch the object tracker, checking if we are tracking the
       robot or the system -->
  <arg name="track" default="robot" />
  <include file="$(find objecttracker_nu)/launch/$(arg track)_tracking.launch"/>

  <!--now let's launch the serial node-->
  <node pkg="serial_node" type="serial_node" name="serial_node"
	output="log" required="true" />

  <!--now let's launch the puppeteer_control node while passing
       correct args-->
  <arg name="file" default="default.txt" />
  <arg name="dir" default="$(find puppeteer_control)/data/" />
  <node pkg="puppeteer_control" type="kalman_controller"
	name="kinematic_controller" output="screen" respawn="false"
	cwd="node" args="-f $(arg file) -p $(arg dir)"/>

  <!--launch the estimator node-->
  <node pkg="estimator_node" type="kalman_estimator"
	name="kalman_estimator" output="screen" respawn="true" />

  <!--launch the keyboard node-->
  <node pkg="keyboard_node" type="keyboard_node"
	name="keyboard_interface" output="screen" respawn="true"
	launch-prefix="xterm -rv -e" />

  <!--launch the filtering node-->
  <node pkg="filtering_node" type="ekf_filter"
	name="ekf_implementation" output="screen" respawn="true" />

</launch>
